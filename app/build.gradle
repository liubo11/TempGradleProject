apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.projectConfig.compileSdkVersion

    signingConfigs {
        debug {}
        release {
            storeFile       file("keystore/lbReleaseAlpha1.jks")
            storePassword   project.hasProperty('app.release.storepassword')?project.getProperty('app.release.storepassword'):''
            keyAlias        project.hasProperty('app.release.keyalias')?project.getProperty('app.release.keyalias'):''
            keyPassword     project.hasProperty('app.release.keypassword')?project.getProperty('app.release.keypassword'):''
        }
    }

    defaultConfig {
        applicationId       "com.lb.collection"
        minSdkVersion       rootProject.projectConfig.minSdkVersion
        targetSdkVersion    rootProject.projectConfig.targetSdkVersion
        versionCode         rootProject.projectVersion.versionCode
        versionName         rootProject.projectVersion.versionName
        signingConfig       signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == 'release') {
                //修改目录
                File outputDirectory = file("releaseApk")
                if (!outputDirectory.exists() || !outputDirectory.isDirectory()) {
                    outputDirectory.mkdir()
                }
                variant.getPackageApplication().outputDirectory = outputDirectory
                outputFileName = "TestApp-${releaseTime()}-${variant.versionName}.${variant.versionCode}.apk"
            }
        }
    }
}

task ttt {
    println (project.getProperty('app.release.storepassword'))
    println (project.getProperty('app.release.storepassword'))
    println (project.getProperty('app.release.storepassword'))
    println (project.getProperty('app.release.storepassword'))
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
